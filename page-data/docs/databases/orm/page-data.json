{"componentChunkName":"component---src-templates-docs-js","path":"/docs/databases/orm","result":{"data":{"docs":{"html":"<h1 id=\"swift-kuery-orm\"><a href=\"#swift-kuery-orm\" aria-label=\"swift kuery orm permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swift Kuery ORM</h1>\n<p><a href=\"https://github.com/Kitura-Next/Swift-Kuery-ORM\">Swift-Kuery-ORM</a> is an ORM (Object Relational Mapping) library for Swift built on top of <a href=\"https://github.com/Kitura-Next/Swift-Kuery\">Swift Kuery</a>, using it allows you to simplify the persistence of model objects with your server.</p>\n<p>In this guide we will show you how to save and retrieve a <code class=\"language-text\">Codable</code> Swift model from a database (in this case PostgreSQL) using the ORM.</p>\n<p>This guide uses the ORM with <a href=\"../routing/codable-routing\">codable routes</a>, however, the ORM also works with Kitura's <a href=\"../routing/raw-routing\">raw routing</a>.</p>\n<blockquote>\n<p>Support for nested <code class=\"language-text\">Codable</code> types (models, structs, arrays etc.) is not currently available in the ORM. Support for simple nesting will be added prior to releasing V1.0, more complex nesting will be added for V2.0.</p>\n</blockquote>\n<hr>\n<h2 id=\"step-1-define-the-orm-routes\"><a href=\"#step-1-define-the-orm-routes\" aria-label=\"step 1 define the orm routes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 1: Define the ORM routes</h2>\n<p>We are going to create a new file in our project for the ORM routes.</p>\n<blockquote>\n<p>If you don't have a server, follow our <a href=\"../getting-started/create-server-cli\">Create a server</a> guide.</p>\n</blockquote>\n<p>Open your <code class=\"language-text\">Application.swift</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">open Sources/Application/Application.swift</code></pre></div>\n<p>Inside the <code class=\"language-text\">postInit()</code> function add:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token function\">initializeORMRoutes</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">:</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Create a new file called <code class=\"language-text\">ORMRoutes.swift</code> to define the ORM routes in:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">touch Sources/Application/Routes/ORMRoutes.swift</code></pre></div>\n<p>Open the <code class=\"language-text\">ORMRoutes.swift</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">open Sources/Application/Routes/ORMRoutes.swift</code></pre></div>\n<p>Inside this file we will add the code for our ORM routes:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token builtin\">KituraContracts</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">initializeORMRoutes</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">:</span> <span class=\"token builtin\">App</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Connect to database here</span>\n    app<span class=\"token punctuation\">.</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/orm\"</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">:</span> app<span class=\"token punctuation\">.</span>saveHandler<span class=\"token punctuation\">)</span>\n    app<span class=\"token punctuation\">.</span>router<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/orm\"</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">:</span> app<span class=\"token punctuation\">.</span>findAllHandler<span class=\"token punctuation\">)</span>\n    app<span class=\"token punctuation\">.</span>router<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/orm\"</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">:</span> app<span class=\"token punctuation\">.</span>findOneHandler<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">extension</span> <span class=\"token builtin\">App</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function\">saveHandler</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Book</span><span class=\"token punctuation\">,</span> completion<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">Book</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">RequestError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Save book here</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">func</span> <span class=\"token function\">findAllHandler</span><span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">Book</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">RequestError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Get all books here</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">func</span> <span class=\"token function\">findOneHandler</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">,</span> completion<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">Book</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">RequestError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Get one book here</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We have defined three routes on the \"/orm\" endpoint. One to handle POST requests, one to handle GET requests with an identifier and one to handle GET requests without an identifier.</p>\n<p>The routes in this guide are using the <a href=\"/docs/routing/what-is-routing#codable-model\">Book model from the routing guide</a>, however you could use any Codable type.</p>\n<hr>\n<h2 id=\"step-2-add-the-orm-to-the-projects-dependencies\"><a href=\"#step-2-add-the-orm-to-the-projects-dependencies\" aria-label=\"step 2 add the orm to the projects dependencies permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 2: Add the ORM to the project's dependencies</h2>\n<blockquote>\n<p>You can use any of the other database plugins supported by <a href=\"https://github.com/Kitura-Next/Swift-Kuery\">Swift-Kuery</a>, however, the rest of this guide is written to work with the <a href=\"https://github.com/Kitura-Next/Swift-Kuery-PostgreSQL\">Swift-Kuery-PostgreSQL</a> plugin.</p>\n</blockquote>\n<p>To use the ORM, we need to <a href=\"https://github.com/Kitura-Next/Swift-Kuery-ORM#update-your-packageswift-file\">add Swift-Kuery-ORM</a> and add <a href=\"https://github.com/Kitura-Next/Swift-Kuery-PostgreSQL#add-dependencies\">Swift-Kuery-PostgreSQL</a> to your dependencies.</p>\n<p>Next, we import the ORM library and our chosen plugin to the project:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token builtin\">SwiftKueryORM</span>\n<span class=\"token keyword\">import</span> <span class=\"token builtin\">SwiftKueryPostgreSQL</span></code></pre></div>\n<hr>\n<h2 id=\"step-3-update-our-model\"><a href=\"#step-3-update-our-model\" aria-label=\"step 3 update our model permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 3: Update our Model</h2>\n<p>The key component of the ORM is the <code class=\"language-text\">Model</code> protocol which extends what <code class=\"language-text\">Codable</code> provides. In order to use the ORM, we need to make <code class=\"language-text\">Book</code> conform to the <code class=\"language-text\">Model</code> protocol.</p>\n<p>We do this using an extension beneath our import statements:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">extension</span> <span class=\"token builtin\">Book</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Model</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now that your <code class=\"language-text\">Book</code> struct conforms to <code class=\"language-text\">Model</code>, after you have set up your database connection pool and created a database table, you automatically have access to a slew of convenience functions for your object.</p>\n<hr>\n<h2 id=\"step-4-create-a-database-connection\"><a href=\"#step-4-create-a-database-connection\" aria-label=\"step 4 create a database connection permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 4: Create a database connection</h2>\n<h3 id=\"install-the-postgresql-client\"><a href=\"#install-the-postgresql-client\" aria-label=\"install the postgresql client permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install the PostgreSQL client</h3>\n<p>To use Swift-Kuery-PostgreSQL you need to have the appropriate PostgreSQL C-language client installed.</p>\n<h4 id=\"macos\"><a href=\"#macos\" aria-label=\"macos permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>macOS</h4>\n<p>On macOS we can use Homebrew to install Postgres:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install postgresql</code></pre></div>\n<h4 id=\"linux\"><a href=\"#linux\" aria-label=\"linux permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linux</h4>\n<p>On Linux we can use <code class=\"language-text\">apt</code> to install PostgreSQL:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo apt install postgresql postgresql-contrib</code></pre></div>\n<p>Linux requires that you <a href=\"http://postgresguide.com/setup/users.html\">create a PostgreSQL user</a>.</p>\n<h3 id=\"create-a-postgresql-database\"><a href=\"#create-a-postgresql-database\" aria-label=\"create a postgresql database permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create a PostgreSQL database</h3>\n<p>Now that we have PostgreSQL installed we can create a database:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">createdb bookdb</code></pre></div>\n<p>Now we're ready to connect to our database from our Kitura server.</p>\n<h3 id=\"create-a-postgresql-connection-pool\"><a href=\"#create-a-postgresql-connection-pool\" aria-label=\"create a postgresql connection pool permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create a PostgreSQL connection pool</h3>\n<p>Inside <code class=\"language-text\">initializeORMRoutes</code>, create a PostgreSQL connection pool:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> pool <span class=\"token operator\">=</span> <span class=\"token builtin\">PostgreSQLConnection</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPool</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">:</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span> <span class=\"token number\">5432</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token function\">databaseName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookdb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> poolOptions<span class=\"token punctuation\">:</span> <span class=\"token function\">ConnectionPoolOptions</span><span class=\"token punctuation\">(</span>initialCapacity<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> maxCapacity<span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">Database</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span> <span class=\"token operator\">=</span> <span class=\"token function\">Database</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>If you are on Linux, you must provide your username and password in the options for <code class=\"language-text\">PostgreSQLConnection.createPool()</code>.</p>\n</blockquote>\n<h3 id=\"create-a-book-table\"><a href=\"#create-a-book-table\" aria-label=\"create a book table permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create a Book table</h3>\n<p>Inside <code class=\"language-text\">initializeORMRoutes</code>, create a table in the SQL database that represents our <code class=\"language-text\">Book</code> model:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token builtin\">Book</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTableSync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to create table: <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>error<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To check that a database table called Book has been created, run your Kitura server and then use psql from the command-line as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">psql bookdb\nSELECT * FROM &quot;Book&quot;;</code></pre></div>\n<p>This should print the column names of the Book table with no data (i.e. no rows).</p>\n<hr>\n<h2 id=\"step-5-save-an-object-to-the-database\"><a href=\"#step-5-save-an-object-to-the-database\" aria-label=\"step 5 save an object to the database permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 5: Save an object to the database</h2>\n<p>Now if we want to save a new <code class=\"language-text\">Book</code> object to our database we use the <code class=\"language-text\">save()</code> method.</p>\n<p>In our handler for the <code class=\"language-text\">POST</code> route we add the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">book<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Because we are passing our <code class=\"language-text\">completion</code> closure to an asynchronous function, we need to make <code class=\"language-text\">completion</code> escaping:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">completion<span class=\"token punctuation\">:</span> @escaping <span class=\"token punctuation\">(</span><span class=\"token builtin\">Book</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">RequestError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The POST handler should look similar to this:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">saveHandler</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Book</span><span class=\"token punctuation\">,</span> completion<span class=\"token punctuation\">:</span> @escaping <span class=\"token punctuation\">(</span><span class=\"token builtin\">Book</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">RequestError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    book<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>That's all we need to do, with that one line of code any book data posted to the <code class=\"language-text\">/orm</code> endpoint will be stored in the Book table in our database.</p>\n<p>Next we will show how easy it is to retrieve our book data from the database.</p>\n<hr>\n<h2 id=\"step-6-retrieve-all-the-books-from-the-database\"><a href=\"#step-6-retrieve-all-the-books-from-the-database\" aria-label=\"step 6 retrieve all the books from the database permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 6: Retrieve all the books from the database</h2>\n<p>Next we will retrieve all the data from the book table in our database, to do this we use the <code class=\"language-text\">findAll</code> method.</p>\n<p>The <code class=\"language-text\">findAll</code> method returns an array containing all the books.</p>\n<p>In our <code class=\"language-text\">findAllHandler</code> add the following code:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token builtin\">Book</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">)</span></code></pre></div>\n<p>As with the <code class=\"language-text\">saveHandler</code>, again we must make the <code class=\"language-text\">completion</code> escaping:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">completion<span class=\"token punctuation\">:</span> @escaping <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">Book</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">RequestError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The <code class=\"language-text\">GET</code> handler should look similar to this:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">findAllHandler</span><span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">:</span> @escaping <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">Book</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">RequestError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">Book</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now that we have defined both a <code class=\"language-text\">POST</code> and a <code class=\"language-text\">GET</code> route we can test saving and retrieving a book from the database using curl.</p>\n<blockquote>\n<p>Kitura has support for <a href=\"https://www.openapis.org\">OpenAPI</a> which makes testing Codable routes easy and provides a UI for testing.\nYou can add OpenAPI to your server using our <a href=\"../routing/kitura-openapi\">OpenAPI guide</a>.</p>\n</blockquote>\n<p>Firstly we need to start our Kitura server.</p>\n<p>In the terminal use curl to post a book to our endpoint:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">curl -X POST \\\n      http://localhost:8080/orm \\\n      -H &#39;content-type: application/json&#39; \\\n      -d &#39;{\n        &quot;id&quot;: 0,\n        &quot;title&quot;: &quot;A Game of Thrones&quot;,\n        &quot;price&quot;: 14.99,\n        &quot;genre&quot;: &quot;Fantasy&quot;\n    }&#39;</code></pre></div>\n<p>You should see the following output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{&quot;id&quot;: 0,&quot;title&quot;:&quot;A Game of Thrones&quot;,&quot;price&quot;:14.99,&quot;genre&quot;:&quot;Fantasy&quot;}</code></pre></div>\n<p>Next we will retrieve our book data.</p>\n<p>Open your browser at:</p>\n<p><a href=\"http://localhost:8080/orm\" target=\"blank\">localhost:8080/orm</a></p>\n<p>This will make a get request to the server and you should see the book we posted before:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[{&quot;id&quot;: 0,&quot;title&quot;:&quot;A Game of Thrones&quot;,&quot;price&quot;:14.99,&quot;genre&quot;:&quot;Fantasy&quot;}]</code></pre></div>\n<p>Now you can restart your Kitura server and the book data will persist in the database. This is one of the many advantages of using a database.</p>\n<hr>\n<h2 id=\"step-7-retrieve-a-single-book-from-the-database\"><a href=\"#step-7-retrieve-a-single-book-from-the-database\" aria-label=\"step 7 retrieve a single book from the database permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 7: Retrieve a single book from the database</h2>\n<p>If we want to retrieve a single book from our database, we use the <code class=\"language-text\">find(id:)</code> method.</p>\n<p>This will return a single object with the provided <code class=\"language-text\">id</code>.</p>\n<p>In our <code class=\"language-text\">findOneHandler</code> add the following code:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token builtin\">Book</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> id<span class=\"token punctuation\">,</span> completion<span class=\"token punctuation\">)</span></code></pre></div>\n<p>As with our previous handler, we must make the <code class=\"language-text\">completion</code> escaping:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">completion<span class=\"token punctuation\">:</span> @escaping <span class=\"token punctuation\">(</span><span class=\"token builtin\">Book</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">RequestError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The <code class=\"language-text\">GET</code> one handler should look similar to this:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">findOneHandler</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">,</span> completion<span class=\"token punctuation\">:</span> @escaping <span class=\"token punctuation\">(</span><span class=\"token builtin\">Book</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">RequestError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">Book</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> id<span class=\"token punctuation\">,</span> completion<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Test this out by opening your browser at:</p>\n<p><a href=\"http://localhost:8080/orm/0\" target=\"blank\">localhost:8080/orm/0</a></p>\n<p>This will make a get request to the server for a book with an <code class=\"language-text\">id</code> of 0, so it should return the book we posted previously.</p>\n<p>Your completed routes file, <code class=\"language-text\">ORMRoutes.swift</code>, should look as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token builtin\">KituraContracts</span>\n<span class=\"token keyword\">import</span> <span class=\"token builtin\">SwiftKueryORM</span>\n<span class=\"token keyword\">import</span> <span class=\"token builtin\">SwiftKueryPostgreSQL</span>\n\n<span class=\"token keyword\">extension</span> <span class=\"token builtin\">Book</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Model</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">initializeORMRoutes</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">:</span> <span class=\"token builtin\">App</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> pool <span class=\"token operator\">=</span> <span class=\"token builtin\">PostgreSQLConnection</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPool</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">:</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span> <span class=\"token number\">5432</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token function\">databaseName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookdb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> poolOptions<span class=\"token punctuation\">:</span> <span class=\"token function\">ConnectionPoolOptions</span><span class=\"token punctuation\">(</span>initialCapacity<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> maxCapacity<span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">Database</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span> <span class=\"token operator\">=</span> <span class=\"token function\">Database</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token builtin\">Book</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTableSync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to create table: <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>error<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    app<span class=\"token punctuation\">.</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/orm\"</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">:</span> app<span class=\"token punctuation\">.</span>saveHandler<span class=\"token punctuation\">)</span>\n    app<span class=\"token punctuation\">.</span>router<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/orm\"</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">:</span> app<span class=\"token punctuation\">.</span>findAllHandler<span class=\"token punctuation\">)</span>\n    app<span class=\"token punctuation\">.</span>router<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/orm\"</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">:</span> app<span class=\"token punctuation\">.</span>findOneHandler<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">extension</span> <span class=\"token builtin\">App</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function\">saveHandler</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Book</span><span class=\"token punctuation\">,</span> completion<span class=\"token punctuation\">:</span> @escaping <span class=\"token punctuation\">(</span><span class=\"token builtin\">Book</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">RequestError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        book<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">func</span> <span class=\"token function\">findAllHandler</span><span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">:</span> @escaping <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">Book</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">RequestError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">Book</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">func</span> <span class=\"token function\">findOneHandler</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">,</span> completion<span class=\"token punctuation\">:</span> @escaping <span class=\"token punctuation\">(</span><span class=\"token builtin\">Book</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">RequestError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">Book</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> id<span class=\"token punctuation\">,</span> completion<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2 id=\"next-steps\"><a href=\"#next-steps\" aria-label=\"next steps permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next steps</h2>\n<p><a href=\"../sessions/what-are-sessions\">Sessions</a>: Learn about sessions and why you might want to use them.</p>","frontmatter":{"path":"/docs/databases/orm","title":"Swift Kuery ORM"}},"docsList":{"nodes":[{"title":"Getting Started","items":[{"title":"Installation","link":"/docs/getting-started/installation"},{"title":"Hello World","link":"/docs/getting-started/hello-world"},{"title":"Create a Server using Kitura CLI","link":"/docs/getting-started/create-server-cli"},{"title":"Create a Server using SPM","link":"/docs/getting-started/create-server-spm"}]},{"title":"Logging","items":[{"title":"What is Logging?","link":"/docs/logging/what-is-logging"},{"title":"HeliumLogger","link":"/docs/logging/helium-logger"}]},{"title":"Routing","items":[{"title":"What is Routing?","link":"/docs/routing/what-is-routing"},{"title":"Codable Routing","link":"/docs/routing/codable-routing"},{"title":"OpenAPI","link":"/docs/routing/kitura-openapi"},{"title":"Raw Routing","link":"/docs/routing/raw-routing"}]},{"title":"Databases","items":[{"title":"What are Databases?","link":"/docs/databases/what-are-databases"},{"title":"SQL - ORM","link":"/docs/databases/orm"},{"title":"SQL - Kuery","link":"/docs/databases/kuery"},{"title":"NoSQL - CouchDB","link":"/docs/databases/couchdb"}]},{"title":"Sessions","items":[{"title":"What are Sessions?","link":"/docs/sessions/what-are-sessions"},{"title":"Codable Routing Session","link":"/docs/sessions/codable-session"},{"title":"Raw Routing Session","link":"/docs/sessions/raw-session"}]},{"title":"Authentication","items":[{"title":"What is Authentication?","link":"/docs/authentication/what-is-authentication"},{"title":"Basic Authentication","link":"/docs/authentication/basic-authentication"},{"title":"JSON Web Tokens","link":"/docs/authentication/jwt"},{"title":"OAuth 2.0 with Google/Facebook","link":"/docs/authentication/oauth2"}]},{"title":"Web Applications","items":[{"title":"What is Templating?","link":"/docs/web/what-is-templating"},{"title":"Static File Server","link":"/docs/web/static-file-server"},{"title":"Stencil","link":"/docs/web/stencil"},{"title":"Markdown","link":"/docs/web/markdown"}]},{"title":"Client","items":[{"title":"What is a client?","link":"/docs/client/client"},{"title":"iOS Client","link":"/docs/client/iOSClient"}]},{"title":"WebSockets","items":[{"title":"What are WebSockets?","link":"/docs/websockets/websockets"},{"title":"Echo Server","link":"/docs/websockets/echo-server"}]},{"title":"Deploying","items":[{"title":"Monitoring","link":"/docs/deploying/monitoring"},{"title":"Enabling SSL/TLS","link":"/docs/deploying/enabling-ssl"},{"title":"Docker","link":"/docs/deploying/docker"},{"title":"Kubernetes","link":"/docs/deploying/kubernetes"},{"title":"Cloud Foundry","link":"/docs/deploying/cloud-foundry"}]},{"title":"Configuring","items":[{"title":"Enabling SwiftNIO","link":"/docs/configuring/swiftnio"}]},{"title":"API","items":[{"title":"Kitura","link":"/docs/api/kitura"},{"title":"HTTP Client","link":"/docs/api/http-client"},{"title":"Sessions","link":"/docs/api/sessions"},{"title":"Authentication","link":"/docs/api/authentication"},{"title":"Web Templating","link":"/docs/api/web-templating"},{"title":"SQL Databases","link":"/docs/api/sql-databases"},{"title":"Non-SQL Databases","link":"/docs/api/non-sql-databases"},{"title":"Cloud Integration","link":"/docs/api/cloud-integration"},{"title":"Middlewares","link":"/docs/api/middlewares"},{"title":"Cryptography","link":"/docs/api/cryptography"},{"title":"Email","link":"/docs/api/email"}]}]}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}